import pandas as pd
import numpy as np


df=pd.read_csv("")


df.head()


df.info


df.describe()


df.shape


df1=df[['X','Y','month','day']]
df1


df2=df[['FFMC','Category','DMC','DC',’temp’]]
df2


df3=df[['temp','wind','rain','area']]
df3


Merging :
merging=pd.concat([df1,df2,df3])
merging


sort_values=df.sort_values('X’,ascending=True)
sort_values


sort_values=df.sort_values('RH’,ascending=True)
sort_values


df.transpose()


shaping=df.shape
shaping


reshaping_arr=np.array([1,2,3,4,5,6])
reshaping_arr.reshape(3,2)


df.isnull().sum()


df.dropna()


df1=df.loc[1:100,[‘month’,’day’,’temp’]]
df1


df2=df.loc[1:100,[‘wind’,’area’,’rain’]]
df2


df2=df.iloc[[1,3,4,5,6,7,8,9,34,35,50,77,66,88]]
df2


df_integration=pd.concat([df1,df2])
df_integration


df_integration.transpose()


df.drop(columns=”FFMC”)


df_merged=pd.concat([df1,df2])
df_merged


from sklearn.model_selection import train_test_split
from sklearn import linear_model, metrics
X=df[["X"]]
Y=df[["temp"]]


X_train, X_test, Y_train, Y_test=train_test_split(X,Y,test_size=0.2,random_state=1)


len(x_test)


df.shape


reg=linear_model.LinearRegression()


print(x_train)


model=reg.fit(X_train,Y_train)


r_sq=reg.score(X_train,Y_train)


print("determination coefficient:",r_sq)


print("intercept:",model.intercept_)


print("slope:",model.coef_)


Y_pred=model.predict(X_test)


print('predicted response: ',Y_pred,sep='\n')